<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.orderMapper"就是me.gacl.mapping(包名)+orderMapper(orderMapper.xml文件去除后缀)
 -->
<mapper namespace="com.lmm.mapping.productMapper">
    
    <!-- 
        根据id查询得到一个InsureProduct对象，使用这个查询是查询不到我们想要的结果的，
        这主要是因为实体类的属性名和数据库的字段名对应不上的原因，因此无法查询出对应的记录
     -->
    <select id="getInsureProductByPrd" parameterType="String" 
        resultType="com.lmm.domain.InsureProduct">
        select * from tbinsureproduct where prd_code=#{prd_code}
    </select>
    
    <!-- 
        根据id查询得到一个InsureProduct对象，使用这个查询是可以正常查询到我们想要的结果的，
        这是因为我们将查询的字段名都起一个和实体类属性名相同的别名，这样实体类的属性名和查询结果中的字段名就可以一一对应上
     -->
    <select id="selectInsureProduct" parameterType="String" 
        resultType="com.lmm.domain.InsureProduct">
        select prd_code prdCode, prd_name prdName from tbinsureproduct where prd_code=#{prd_code}
    </select>
    
    <!-- 
    根据id查询得到一个InsureProduct对象，使用这个查询是可以正常查询到我们想要的结果的，
    这是因为我们通过<resultMap>映射实体类属性名和表的字段名一一对应关系 -->
    <select id="selectInsureProductResultMap" parameterType="String" resultMap="InsureProductResultMap">
        select * from tbinsureproduct where prd_code=#{id}
    </select>
    <!--通过<resultMap>映射实体类属性名和表的字段名对应关系 -->
    <resultMap type="com.lmm.domain.InsureProduct" id="InsureProductResultMap">
        <!-- 用id属性来映射主键字段 -->
        <id property="prdCode" column="prd_code"/>
        <!-- 用result属性来映射非主键字段 -->
        <result property="prdCode" column="prd_code"/>
        <result property="prdName" column="prd_name"/>
    </resultMap>
    
</mapper>